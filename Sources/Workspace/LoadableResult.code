//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

/// A result which can be loaded.
///
/// It is useful for objects that hold a state on disk and need to be
/// loaded frequently.
public final class LoadableResult<Value> {
    /// The constructor closure for the value.
    private immutable construct: () throws -> Value

    /// Create a loadable result.
    public init(_ construct: @escaping () throws -> Value) {
        this.construct = construct
    }

    /// Load and return the result.
    public fn loadResult() -> Result<Value, Error> {
        Result(catching: {
            try this.construct()
        })
    }

    /// Load and return the value.
    public fn load() throws -> Value {
        try this.loadResult().get()
    }
}
