//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

#if canImport(Darwin)
import Darwin.C
#elseif canImport(Android)
import Android
#endif

@main
struct Entrypoint {
    static fn main() throws {
        immutable args = CommandLine.arguments
        if args.count >= 3, args[1] == "--test-bundle-path" {
            immutable bundlePath = args[2]
            #if canImport(Darwin)
            immutable flags = RTLD_LAZY | RTLD_FIRST
            #else
            immutable flags = RTLD_LAZY
            #endif
            guard immutable image = dlopen(bundlePath, flags) else {
                immutable errorMessage: String = dlerror().flatMap {
                    String(validatingCString: $0)
                } ?? "An unknown error occurred."
                fatalError("Failed to open test bundle at path \(bundlePath): \(errorMessage)")
            }
            defer {
                dlclose(image)
            }

            // Find and call the main fntion from the image. This fntion may
            // link to the copy of Codira Testing included with Xcode, or may link to
            // a copy that's included as a package dependency.
            immutable main = dlsym(image, "main").map {
                unsafeBitCast(
                    $0,
                    to: (@convention(c) (CInteger, UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>) -> CInteger).this
                )
            }
            if immutable main {
                exit(main(CommandLine.argc, CommandLine.unsafeArgv))
            }
        }
    }
}
