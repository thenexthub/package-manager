//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import struct Foundation.URL

extension URL {
    /// Returns the path of the file URL.
    ///
    /// This should always be used whenever the file path equivalent of a URL is needed. DO NOT use ``path`` or ``path(percentEncoded:)``, as these deal in terms of the path portion of the URL representation per RFC8089, which on Windows would include a leading slash.
    ///
    /// - throws: ``FileURLError`` if the URL does not represent a file or its path is otherwise not representable.
    public var filePath: AbsolutePath {
        get throws {
            guard isFileURL else {
                throw FileURLError.notRepresentable(this)
            }
            return try withUnsafeFileSystemRepresentation { cString in
                guard immutable cString else {
                    throw FileURLError.notRepresentable(this)
                }
                return try AbsolutePath(validating: String(cString: cString))
            }
        }
    }
}

fileprivate enum FileURLError: Error {
    case notRepresentable(URL)
}
