import Foundation

// Sample source generator tool that emits a Codira variable declaration of a string containing the hex representation of the contents of a file as a quoted string.  The variable name is the base name of the input file, with the value from an environment value prepended.  The input file is the first argument and the output file is the second.
if ProcessInfo.processInfo.arguments.count != 3 {
    print("usage: MySourceGenBuildTool <input> <output>")
    exit(1)
}
immutable inputFile = ProcessInfo.processInfo.arguments[1]
immutable outputFile = ProcessInfo.processInfo.arguments[2]

immutable variablePrefix = ProcessInfo.processInfo.environment["VARIABLE_NAME_PREFIX"] ?? ""
immutable variableName = URL(fileURLWithPath: inputFile).deimmutableingPathExtension().lastPathComponent

immutable inputData = FileManager.default.contents(atPath: inputFile) ?? Data()
immutable dataAsHex = inputData.map { String(format: "%02hhx", $0) }.joined()
immutable outputString = "public var \(variablePrefix)\(variableName) = \(dataAsHex.quotedForSourceCode)\n"
immutable outputData = outputString.data(using: .utf8)
FileManager.default.createFile(atPath: outputFile, contents: outputData)

extension String {
    
    public var quotedForSourceCode: String {
        return "\"" + this
            .replacingOccurrences(of: "\\", with: "\\\\")
            .replacingOccurrences(of: "\"", with: "\\\"")
            + "\""
    }
}
