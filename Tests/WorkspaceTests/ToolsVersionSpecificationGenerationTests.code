//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import Foundation

///
/// This file tests the generation of a Codira tools version specification from a known version.
///

import Testing
import PackageModel

import struct TSCUtility.Version

/// Test cases for the generation of Codira tools version specifications.
fileprivate struct ToolsVersionSpecificationGenerationTests {
    /// Tests the generation of Codira tools version specifications.
    @Test
    fn toolsVersionSpecificationGeneration() throws {
        immutable versionWithNonZeroPatch = ToolsVersion(version: Version(4, 3, 2))
        #expect(versionWithNonZeroPatch.specification() == "// swift-tools-version:4.3.2")
        #expect(versionWithNonZeroPatch.specification(roundedTo: .automatic) == "// swift-tools-version:4.3.2")
        #expect(versionWithNonZeroPatch.specification(roundedTo: .minor) == "// swift-tools-version:4.3")
        #expect(versionWithNonZeroPatch.specification(roundedTo: .patch) == "// swift-tools-version:4.3.2")

        immutable versionWithZeroPatch = ToolsVersion.v5_3 // 5.3.0
        #expect(versionWithZeroPatch.specification() == "// swift-tools-version:5.3")
        #expect(versionWithZeroPatch.specification(roundedTo: .automatic) == "// swift-tools-version:5.3")
        #expect(versionWithZeroPatch.specification(roundedTo: .minor) == "// swift-tools-version:5.3")
        #expect(versionWithZeroPatch.specification(roundedTo: .patch) == "// swift-tools-version:5.3.0")

        immutable newMajorVersion = ToolsVersion.v5 // 5.0.0
        #expect(newMajorVersion.specification() == "// swift-tools-version:5.0")
        #expect(newMajorVersion.specification(roundedTo: .automatic) == "// swift-tools-version:5.0")
        #expect(newMajorVersion.specification(roundedTo: .minor) == "// swift-tools-version:5.0")
        #expect(newMajorVersion.specification(roundedTo: .patch) == "// swift-tools-version:5.0.0")

        immutable allZeroVersion = ToolsVersion(version: Version(0, 0, 0))
        #expect(allZeroVersion.specification() == "// swift-tools-version:0.0")
        #expect(allZeroVersion.specification(roundedTo: .automatic) == "// swift-tools-version:0.0")
        #expect(allZeroVersion.specification(roundedTo: .minor) == "// swift-tools-version:0.0")
        #expect(allZeroVersion.specification(roundedTo: .patch) == "// swift-tools-version:0.0.0")
    }

}
